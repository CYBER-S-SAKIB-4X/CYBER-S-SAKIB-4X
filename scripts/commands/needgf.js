const axios = require("axios");
const fs = require("fs");
const path = require("path");

const cacheFile = path.join(__dirname, "cache", "cache.json");
if (!fs.existsSync(cacheFile)) fs.writeFileSync(cacheFile, JSON.stringify({}));

module.exports.config = {
  name: "needgf",
  version: "2.3.0",
  permission: 0,
  credits: "SAKIB",
  description: "рж╕рж┐ржЩрзНржЧрзЗрж▓ржжрзЗрж░ рж╢рзЗрж╖ ржнрж░рж╕рж╛ тАФ рж░тАНрзНржпрж╛ржирзНржбржо GF ржЫржмрж┐ ржкрж╛ржарж╛рзЯ ЁЯШЕ (axios + cache)",
  prefix: true,
  category: "fun",
  usages: "-needgf",
  cooldowns: 10,
};

module.exports.run = async function ({ api, event }) {
  try {
    const userID = event.senderID;
    let cache = JSON.parse(fs.readFileSync(cacheFile));

    // ржкрзНрж░рждрж┐ржмрж╛рж░ ржирждрзБржи ржЫржмрж┐ ржлрзЗржЪ
    const res = await axios.get("https://nekos.best/api/v2/neko");
    const imageUrl = res.data.results[0].url;

    // cache ржЖржкржбрзЗржЯ (рж╕рж░рзНржмрж╢рзЗрж╖ ржмрзНржпржмрж╣рзГржд ржЫржмрж┐)
    cache[userID] = imageUrl;
    fs.writeFileSync(cacheFile, JSON.stringify(cache, null, 2));

    // ржбрж╛ржЙржирж▓рзЛржб path
    const imgPath = path.join(__dirname, "cache", `${userID}_gf.jpg`);

    // ржбрж╛ржЙржирж▓рзЛржб
    const imgResponse = await axios.get(imageUrl, { responseType: "arraybuffer" });
    fs.writeFileSync(imgPath, imgResponse.data);

    // ржкрж╛ржарж╛ржирзЛ
    api.sendMessage({
      body: "рждрзЛржорж╛рж░ ржирждрзБржи GF рж╣рж╛ржЬрж┐рж░ ЁЯШШЁЯТЦ",
      attachment: fs.createReadStream(imgPath)
    }, event.threadID, () => fs.unlinkSync(imgPath), event.messageID);

  } catch (err) {
    console.error("тЭМ Full Error:", err);
    api.sendMessage("ржжрзБржГржЦрж┐ржд ржнрж╛ржЗ ЁЯШЕ, ржПржЦржи ржПржХржЯрзБ рж╕ржорж╕рзНржпрж╛ рж╣ржЪрзНржЫрзЗ!", event.threadID, event.messageID);
  }
};
